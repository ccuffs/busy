;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 
; Arquivo de configuração da API WhereIs da SETI-UFFS.
;
; O fluxo para usar a API WhereIs é o seguinte:
;
;  1. O usuário que desejar a funcionalidade solicitará uma api_key
       por meio de chamado fornecendo o MAC do dispositivo desejado.
;       
;  2. DITI gera uma api_key para esse usuário e responde com ela no chamado.
;
; Depois disso, o usuário já pode usar a ferramenta. Importante destaca que
; uma api_key está associada a um mac (não será possível consultar outros
; MAC's com essa api_key), assim a SETI tem certeza que só usuários que
; solicitaram o serviço poderão obter as informações.
;
; Momentaneamente, a API estará acessível em: http://172.20.67.219:7000/
;
; Deve-se fornecer o MAC como parâmetro e a api_key pelo header "x-api-key".
; Exemplo:
;
;  curl --header "x-api-key:xxxxx" http://172.20.67.219:7000/68:c4:4d:da:af:22
; 
; onde "68:c4:4d:da:af:22" é o MAC do dispositivo do usuário cuja api_key
; é "xxxxx".
;
; Author: Fernando Bevilacqua <fernando.bevilacqua@uffs.edu.br>
; Data: 2019-09-20
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; URL onde a API whereis é disponibilizada
endpoint_url = http://172.20.67.219:7000/

; Quantos usuários serão analisados (e consultas feitas à API) por lote/chunk
update_chunck_size = 100

; Quanto tempo deve esperar para poder processar o próximo lote
; de usuários (chunck)
chunk_wait_seconds = 0.5

; Quanto tempo de intervalo entre um update e outro de um determinado usuário.
update_interval_minutes = 3

; Dado o valor estipulado em "update_interval_minutes", quantos porcento
; desse valor será usado para adição de um tempo aleatório entre usuários.
; Ex.: se update_interval_minutes for 1 e update_interval_rand_percentage
; for 0.1, poderá existir um acréscimo de 6 segundos para a próxima
; consulta do usuário em questão.
update_interval_rand_percentage = 0.3
